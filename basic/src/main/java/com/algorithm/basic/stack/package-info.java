/**
 * @Title: package-info
 * @Author: linchong
 * @Desc:
 * @Create: 2022-07-25 20:55
 *
 *
 *
 *
 * 栈（stack）是很简单的⼀种数据结构，先进后出的逻辑顺序，符合某些问题的特点，⽐如说函数调⽤栈。
 * 单调栈实际上就是栈，只是利⽤了⼀些巧妙的逻辑，使得每次新元素⼊栈后，栈内的元素都保持有序（单调
 * 递增或单调递减）。
 *
 * 单调栈⽤途不太⼴泛，只处理⼀种典型的问题，叫做 Next Greater Element。
 *
 * ⽤讲解单调队列的算法模版解决这类问题，并且探讨处理「循环数组」的策略。
 *
 *
 * 单调栈模板：
 *    给你⼀个数组 nums，请你返回⼀个等⻓的结果数组，结果数组中对应索引存储着下⼀个更⼤元素，如果没有
 * 更⼤的元素，就存 -1。
 *
 *      List<int> nextGreaterElement(List<int> nums);
 *
 *      如：输⼊⼀个数组 nums = [2,1,2,4,3]，你返回数组 [4,2,4,-1,-1]。第⼀个 2 后⾯⽐ 2 ⼤的数是 4;
 *  1 后⾯⽐ 1 ⼤的数是 2；第⼆个 2 后⾯⽐ 2 ⼤的数是 4; 4 后⾯没有⽐ 4⼤的数，填 -1；3 后⾯没有⽐ 3 ⼤的数，
 *  填 -1。
 *
 *  暴⼒解法很好想到，就是对每个元素后⾯都进⾏扫描，找到第⼀个更⼤的元素就⾏了。时间复杂度是 O(n^2)。
 *
 *
 *
 *
 **/
package com.algorithm.basic.stack;